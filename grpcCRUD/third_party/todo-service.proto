syntax = "proto3";
package v1;
// option go_package=".;v1";

import "google/protobuf/timestamp.proto";
//vs code報錯，但實際上是可以用的
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

// import "google/api/annotations.proto";
// import "protoc-gen-swagger/options/annotations.proto";
// option go_package = "v1";  

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info:{
      title:"ToDo service";
      version:"1.0";
      contact:{
        name:"golang-grpc-rest-microservice-todo service",
        url: "https://github.com/Tzuhaochen/golang-grpc-rest-microservice-todo "
        email:"chenhoward0401@gmai.com"
      };
    };
    schemes: HTTP;
    consumes:"application/json";
    produces:"application/json";
    responses: {
      key:"ˋ404";
      value: {
        description:""
      }
    }
};


message ToDo {
  int64 id = 1;
  string title = 2;
  string description = 3;
  google.protobuf.Timestamp reminder = 4;
}

message CreateRequest {
  string api = 1;
  ToDo toDo = 2;
}

message CreateResponse {
  string api = 1;
  int64 id = 2;
}

message ReadRequest {
  string api = 1;
  int64 id = 2;
}

message ReadResponse {
  string api = 1;
  ToDo toDo = 2;
}

message UpdateRequest {
  string api = 1;
  ToDo toDo = 2;
}

message UpdateResponse {
  string api = 1;
  int64 updated = 2;
}

message DeleteRequest {
  string api = 1;
  int64 id = 2;
}

message DeleteResponse {
  string api = 1;
  int64 deleted = 2;
}

message ReadAllRequest {
  string api = 1;
}

message ReadAllResponse {
  string api = 1;
  //Slice
  repeated ToDo set = 2;
}

//如果出現no field 就是欄位沒對好 no leading /  就是路由有問題
service ToDoService {
  
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/v1/todo"
      body:"*"
    };
  }

  rpc Read(ReadRequest) returns (ReadResponse) {
    option (google.api.http) = {
          get: "/v1/todo/{id}"
      };
  }

  rpc Update(UpdateRequest) returns (UpdateResponse) {
    option (google.api.http) = {
      put: "/v1/todo/{toDo.id}"
      body:"*"
      additional_bindings {
        patch:"/v1/todo/{toDo.id}"
        body:"*"
      }
    };
  }

  rpc Delete(DeleteRequest) returns (DeleteResponse){
    option (google.api.http) = {
      delete: "/v1/todo/{id}"
    };
  }

  rpc ReadAll(ReadAllRequest) returns (ReadAllResponse){
    option (google.api.http) = {
      get: "/v1/todo/all"
    };
  }
}


